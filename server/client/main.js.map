{"version":3,"sources":["./src/app/signin/signin.component.ts","./src/app/signin/signin.component.html","./src/app/add-new-post/add-new-post.component.ts","./src/app/add-new-post/add-new-post.component.html","./src/app/my-memes/my-memes.component.html","./src/app/my-memes/my-memes.component.ts","./src/app/user-service.service.ts","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/app/post-comment/post-comment.component.ts","./src/app/post-comment/post-comment.component.html","./src/app/single-comment-preview/single-comment-preview.component.ts","./src/app/single-comment-preview/single-comment-preview.component.html","./src/environments/environment.ts","./src/app/core/scroll-to-top/scroll-to-top.component.ts","./src/app/core/scroll-to-top/scroll-to-top.component.html","./src/app/models/GetPostsServer.ts","./src/app/single-post/single-post.component.ts","./src/app/single-post/single-post.component.html","./src/app/core/side-nav/side-nav.component.ts","./src/app/core/side-nav/side-nav.component.html","./src/app/models/Post.ts","./src/app/core/navbar/navbar.component.ts","./src/app/core/navbar/navbar.component.html","./src/app/app.component.html","./src/app/app.component.ts","./src/app/models/Comment.ts","./src/app/app.module.ts","./src/app/comments/comments.component.ts","./src/app/comments/comments.component.html","./src/app/models/PostsList.ts","./src/app/comments.service.ts","./src/app/single-comment/single-comment.component.ts","./src/app/single-comment/single-comment.component.html","./src/app/not-found/not-found.component.ts","./src/app/not-found/not-found.component.html","./src/app/posts-ilike/posts-ilike.component.html","./src/app/posts-ilike/posts-ilike.component.ts","./src/app/token-itnerceptor.service.ts","./src/app/posts-service.service.ts","./src/app/models/GetCommentsServer.ts","./src/app/single-post-page/single-post-page.component.ts","./src/app/single-post-page/single-post-page.component.html","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/app/auth.guard.ts","./src/app/core/side-nav-content/side-nav-content.component.ts","./src/app/core/side-nav-content/side-nav-content.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { UserService } from '../user-service.service';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css'],\n})\nexport class SigninComponent implements OnInit {\n  form: FormGroup;\n  constructor(private fb: FormBuilder, public provider: UserService) {}\n\n  ngOnInit(): void {\n    this.initializeForm();\n  }\n  initializeForm() {\n    this.form = this.fb.group({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required]),\n    });\n  }\n  login() {\n    this.provider.login(this.form.value);\n  }\n}\n","<form class=\"sign\" (ngSubmit)=\"login()\" [formGroup]=\"form\">\n  <h3 class=\"text-center mb-5\">Signin</h3>\n\n  <div class=\"form-group\">\n    <label for=\"exampleInputEmail1\">Email address</label>\n    <input\n      type=\"email\"\n      formControlName=\"email\"\n      class=\"form-control\"\n      [ngClass]=\"{\n        'is-invalid': form.get('email').invalid && form.get('email').touched\n      }\"\n      id=\"exampleInputEmail1\"\n      aria-describedby=\"emailHelp\"\n      placeholder=\"Enter email\"\n    />\n\n    <small\n      class=\"error-message\"\n      *ngIf=\"\n        form.get('email').hasError('required') && form.get('email').touched\n      \"\n      >Email is required</small\n    >\n    <small\n      class=\"error-message\"\n      *ngIf=\"form.get('email').hasError('email') && form.get('email').touched\"\n      >Invalid email format</small\n    >\n  </div>\n  <div class=\"form-group\">\n    <label for=\"exampleInputPassword1\">Password</label>\n    <input\n      type=\"password\"\n      formControlName=\"password\"\n      [ngClass]=\"{\n        'is-invalid':\n          form.get('password').invalid && form.get('password').touched\n      }\"\n      class=\"form-control\"\n      placeholder=\"Password\"\n    />\n    <small\n      class=\"error-message\"\n      *ngIf=\"\n        form.get('password').hasError('minlength') &&\n        form.get('password').touched\n      \"\n      >Password must be at least 6 characters long.</small\n    >\n    <small\n      class=\"error-message\"\n      *ngIf=\"\n        form.get('password').hasError('required') &&\n        form.get('password').touched\n      \"\n      >Password is required.</small\n    >\n  </div>\n\n  <button\n    [disabled]=\"form.invalid\"\n    type=\"submit\"\n    class=\"btn btn-primary d-block m-auto\"\n  >\n    Submit\n  </button>\n  <span class=\"lead d-block m-auto text-center mt-3\">\n    Dont't have an account?\n    <a [routerLink]=\"['/signup']\" routerLinkActive=\"router-link-active\"\n      >Sign up</a\n    >\n  </span>\n  <div\n    *ngFor=\"let error of provider.errors\"\n    class=\"alert alert-danger\"\n    role=\"alert\"\n  >\n    {{ error.message }}\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-solid-svg-icons';\nimport { Post } from '../models/Post';\nimport { PostsService } from '../posts-service.service';\nimport { UserService } from '../user-service.service';\n@Component({\n  selector: 'app-add-new-post',\n  templateUrl: './add-new-post.component.html',\n  styleUrls: ['./add-new-post.component.css'],\n})\nexport class AddNewPostComponent implements OnInit {\n  faThumbsUp = faThumbsUp;\n  faThumbsDown = faThumbsDown;\n  src: any = '../../assets/placeholder.jpg';\n  form: FormGroup;\n  submitting: boolean = false;\n  constructor(\n    private fb: FormBuilder,\n    private postsService: PostsService,\n    private userService: UserService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.initializeForm();\n  }\n  initializeForm() {\n    this.form = this.fb.group({\n      title: new FormControl('', [Validators.required]),\n      image: new FormControl('', [Validators.required]),\n    });\n  }\n\n  markAsTouched() {\n    this.form.get('image').markAsTouched();\n  }\n\n  onFileChange(e) {\n    let reader = new FileReader();\n    const file = e.target.files[0];\n    reader.readAsDataURL(file);\n    this.form.patchValue({\n      image: file,\n    });\n\n    reader.onload = () => {\n      this.src = reader.result;\n    };\n  }\n\n  submitForm(event) {\n    if (!this.userService.user) {\n      this.userService.setError('Please sign in first!');\n      this.router.navigateByUrl('/signin');\n      return;\n    }\n    event.preventDefault();\n    this.submitting = true;\n    let formData = new FormData();\n    formData.append('title', this.form.get('title').value);\n    formData.append('image', this.form.get('image').value);\n    this.postsService.addNewPost(formData).subscribe(\n      (x) => {\n        this.submitting = false;\n        this.postsService.posts.unshift(x);\n        this.router.navigateByUrl('/');\n      },\n      (e) => {\n        console.log(e);\n      }\n    );\n  }\n}\n","<div class=\"everything mt-0\">\n  <div class=\"side mt-0\">\n    <div class=\"lll mt-0\">\n      <app-side-nav-content></app-side-nav-content>\n      <div class=\"experiment\"></div>\n    </div>\n  </div>\n  <div class=\"container\">\n    <h4 class=\"text-center\">Upload your meme</h4>\n    <form\n      [formGroup]=\"form\"\n      class=\"d-flex flex-column align-items-center\"\n      (ngSubmit)=\"submitForm($event)\"\n    >\n      <div class=\"form-group w-100\">\n        <label for=\"exampleInputEmail1\">Title</label>\n        <input\n          formControlName=\"title\"\n          type=\"text\"\n          class=\"form-control\"\n          id=\"exampleInputEmail1\"\n          aria-describedby=\"emailHelp\"\n          placeholder=\"Title of your new meme\"\n        />\n        <small\n          class=\"error-message\"\n          *ngIf=\"\n            form.get('title').hasError('required') && form.get('title').touched\n          \"\n          >Title is required</small\n        >\n      </div>\n      <div class=\"input-group mb-3\">\n        <div class=\"custom-file\" (click)=\"markAsTouched()\">\n          <input\n            (change)=\"onFileChange($event)\"\n            type=\"file\"\n            class=\"custom-file-input\"\n            id=\"inputGroupFile01\"\n          />\n          <label class=\"custom-file-label\" for=\"inputGroupFile01\"\n            >Choose file</label\n          >\n        </div>\n      </div>\n      <small\n        class=\"error-message mr-auto\"\n        *ngIf=\"\n          form.get('image').hasError('required') && form.get('image').touched\n        \"\n        >Please pick an image\n      </small>\n\n      <button [disabled]=\"!form.valid\" type=\"submit\" class=\"btn btn-primary\">\n        <span *ngIf=\"!submitting\">Submit</span>\n\n        <div *ngIf=\"submitting\" class=\"spinner-border text-dark\" role=\"status\">\n          <span class=\"sr-only\">Loading...</span>\n        </div>\n      </button>\n    </form>\n    <!-- meme preview -->\n    <div class=\"card mt-2\">\n      <h5 class=\"card-title\">\n        {{ form.get(\"title\").value || \"The title of your meme\" }}\n      </h5>\n\n      <img [src]=\"src\" class=\"card-img-top\" alt=\"new post\" />\n\n      <div class=\"card-body d-flex justify-content-end\">\n        <button class=\"btn btn-outline-dark d-flex align-items-center\">\n          0 &nbsp;\n          <fa-icon [icon]=\"faThumbsUp\"></fa-icon>\n        </button>\n        <button class=\"btn btn-outline-dark d-flex align-items-center ml-2\">\n          0 &nbsp;\n          <fa-icon [icon]=\"faThumbsDown\"></fa-icon>\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","<div class=\"everything mt-0\">\n  <div class=\"side mt-0\">\n    <div class=\"lll mt-0\">\n      <app-side-nav-content></app-side-nav-content>\n      <div class=\"experiment\"></div>\n    </div>\n  </div>\n  <div class=\"main mt-4\">\n    <app-single-post\n      *ngFor=\"let post of postsProvider.myPosts\"\n      [post]=\"post\"\n    ></app-single-post>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Post } from '../models/Post';\nimport { PostsService } from '../posts-service.service';\n\n@Component({\n  selector: 'app-my-memes',\n  templateUrl: './my-memes.component.html',\n  styleUrls: ['./my-memes.component.css'],\n})\nexport class MyMemesComponent implements OnInit {\n  constructor(public postsProvider: PostsService) {}\n\n  ngOnInit(): void {\n    this.getMyPosts();\n  }\n\n  getMyPosts() {\n    this.postsProvider.getMyPosts();\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { User } from './models/User';\nimport { map, filter } from 'rxjs/operators';\nimport { Token } from './models/Token';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  url: string = 'https://rajko-meme-app.herokuapp.com/api/auth/';\n  user: User = null;\n  token: string = null;\n  errors: { id: number; message: string }[] = [];\n  constructor(private http: HttpClient, private router: Router) {}\n\n  register(credentials): void {\n    this.http\n      .post<Token>(this.url + 'register', credentials)\n      .pipe(\n        map((x) => {\n          return x;\n        })\n      )\n      .subscribe(\n        (x) => {\n          this.token = x.data.token;\n          localStorage.setItem('token', x.data.token);\n          this.router.navigateByUrl('/');\n          this.getUser();\n        },\n        (e) => {\n          this.setError(e.error.msg);\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n        }\n      );\n  }\n  login(credentials) {\n    return this.http\n      .post<Token>(this.url + 'login', credentials)\n      .pipe(\n        map((x) => {\n          return x.data.token;\n        })\n      )\n      .subscribe(\n        (x) => {\n          this.token = x;\n          localStorage.setItem('token', this.token);\n          this.getUser();\n          this.router.navigateByUrl('/');\n        },\n        (e) => {\n          console.log(e.error.msg);\n          this.setError(e.error.msg);\n          console.log(this.errors);\n\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n        }\n      );\n  }\n  setError(message): void {\n    let id = Date.now();\n    this.errors.push({ id, message });\n    let t = setTimeout(() => {\n      this.errors.length = 0;\n      clearTimeout(t);\n    }, 3000);\n  }\n  getUser(): void {\n    this.http\n      .get<{ data: { user: User } }>(this.url + 'user')\n      .pipe(\n        map((x) => {\n          return x;\n        })\n      )\n      .subscribe(\n        (x) => {\n          this.user = x.data.user;\n          localStorage.setItem('user', JSON.stringify(this.user));\n        },\n        (e) => {\n          console.log(e);\n\n          localStorage.removeItem('user');\n          localStorage.removeItem('token');\n        }\n      );\n  }\n  logout() {\n    (this.user = null), (this.token = null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  }\n}\n","<div class=\"d-flex justify-content-center\">\n  <div class=\"side\">\n    <div class=\"lll\">\n      <app-side-nav-content></app-side-nav-content>\n      <div class=\"experiment\"></div>\n    </div>\n  </div>\n  <div class=\"main mt-5\">\n    <app-single-post\n      class=\"d-flex justify-content-center\"\n      *ngFor=\"let post of provider.posts\"\n      [post]=\"post\"\n    ></app-single-post>\n    <!-- spinner -->\n    <div\n      *ngIf=\"provider.loadingPosts\"\n      class=\"spinner-border spinner text-primary\"\n      role=\"status\"\n    >\n      <span class=\"sr-only\">Loading...</span>\n    </div>\n    <!-- no more content -->\n    <div\n      *ngIf=\"provider.noContent\"\n      class=\"alert alert-primary mt-5 d-flex justify-content-center align-items-center\"\n      role=\"alert\"\n    >\n      No more content !\n      <img\n        class=\"ml-1\"\n        width=\"100px\"\n        src=\"../../assets/nocontent.png\"\n        alt=\"no content\"\n      />\n    </div>\n  </div>\n  <div class=\"side\"></div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { PostsService } from '../posts-service.service';\nimport { UserService } from '../user-service.service';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n  /*  posts: Post[]; */\n  constructor(\n    public provider: PostsService,\n    public userProvider: UserService\n  ) {}\n\n  ngOnInit(): void {\n    this.infiniteScrolling();\n    if (document.documentElement.scrollHeight.toString()) {\n      this.getPosts();\n    }\n  }\n\n  getPosts() {\n    this.provider.getPosts();\n  }\n\n  infiniteScrolling() {\n    let listener = document.addEventListener('scroll', () => {\n      let height = document.documentElement.scrollHeight;\n\n      let scrolled = window.pageYOffset + window.innerHeight;\n      if (\n        height - 100 < scrolled &&\n        !this.provider.loadingPosts &&\n        !this.provider.noContent\n      ) {\n        this.getPosts();\n      }\n    });\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { CommentsService } from '../comments.service';\nimport { Comment } from '../models/Comment';\nimport { faPaperPlane } from '@fortawesome/free-solid-svg-icons';\nimport { UserService } from '../user-service.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-post-comment',\n  templateUrl: './post-comment.component.html',\n  styleUrls: ['./post-comment.component.css'],\n})\nexport class PostCommentComponent implements OnInit {\n  @Input()\n  postId: number;\n  @Input()\n  comment: Comment;\n  body: string;\n  faPaperPlane = faPaperPlane;\n  constructor(\n    private commentsProvider: CommentsService,\n    private userService: UserService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {}\n  kurcina() {\n    console.log(this.body);\n  }\n\n  postComment() {\n    if (!this.userService.user) {\n      this.userService.setError('Please sign in first!');\n      this.router.navigateByUrl('/signin');\n      return;\n    }\n    this.commentsProvider.postComment(\n      this.body,\n      this.postId,\n      this.comment?.comment_id\n    );\n    this.body = '';\n  }\n}\n","<div class=\"container-fluid p-0 w-90\">\n  <form (ngSubmit)=\"postComment()\" #form=\"ngForm\" class=\"input-group mb-3\">\n    <input\n      placeholder=\"Post comment\"\n      type=\"text\"\n      [(ngModel)]=\"body\"\n      name=\"body\"\n      class=\"form-control\"\n    />\n    <div class=\"input-group-append\">\n      <button class=\"btn btn-primary\" id=\"button-addon2\">\n        <fa-icon [icon]=\"faPaperPlane\"></fa-icon>\n      </button>\n    </div>\n  </form>\n</div>\n","import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport { CommentsService } from '../comments.service';\nimport { Comment } from '../models/Comment';\n\n@Component({\n  selector: 'app-single-comment-preview',\n  templateUrl: './single-comment-preview.component.html',\n  styleUrls: ['./single-comment-preview.component.css'],\n})\nexport class SingleCommentPreviewComponent implements OnInit {\n  comment_id;\n  loadingComment: boolean = true;\n  error: string;\n  comment: Comment;\n\n  constructor(\n    private route: ActivatedRoute,\n    public commentsService: CommentsService,\n    private router: Router,\n    private location: Location\n  ) {}\n\n  ngOnInit(): void {\n    this.getPostId();\n  }\n\n  getPostId() {\n    this.route.params.pipe(map((p) => p.id)).subscribe((x) => {\n      this.comment_id = x;\n      this.loadingComment = true;\n      this.getSingleComment();\n    });\n  }\n\n  getSingleComment() {\n    this.commentsService.getSingleComment(this.comment_id).subscribe(\n      (x) => {\n        this.comment = x;\n        this.commentsService.getAllComments(this.comment.post_id);\n        this.commentsService.getSubcomments(this.comment.comment_id);\n        this.loadingComment = false;\n        this.commentsService.singleCommentExists = true;\n      },\n      (e) => {\n        this.loadingComment = false;\n        this.error = e.error.msg;\n      }\n    );\n  }\n\n  goBack() {\n    this.location.back();\n  }\n}\n","<div class=\"container-fluid d-flex flex-column align-content-center\">\n  <div\n    *ngIf=\"loadingComment\"\n    style=\"width: 100px; height: 100px\"\n    class=\"spinner-border text-primary\"\n    role=\"status\"\n  >\n    <span class=\"sr-only\">Loading...</span>\n  </div>\n  <div *ngIf=\"error\" class=\"alert alert-warning\" role=\"alert\">\n    {{ error }}\n    <a (click)=\"goBack()\" class=\"alert-link\"> go back .</a>\n  </div>\n\n  <app-single-comment\n    *ngIf=\"comment && commentsService.singleCommentExists\"\n    [comment]=\"comment\"\n    [partOfPreviewComponent]=\"true\"\n  ></app-single-comment>\n  <h4 *ngIf=\"commentsService.subcomments.length\" class=\"text-center m-2\">\n    Replies\n  </h4>\n  <app-single-comment\n    class=\"mt-2\"\n    *ngFor=\"let comment of commentsService.subcomments\"\n    [comment]=\"comment\"\n  ></app-single-comment>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { faArrowUp } from '@fortawesome/free-solid-svg-icons';\n@Component({\n  selector: 'app-scroll-to-top',\n  templateUrl: './scroll-to-top.component.html',\n  styleUrls: ['./scroll-to-top.component.css'],\n})\nexport class ScrollToTopComponent implements OnInit {\n  faArrowUp = faArrowUp;\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  scroll() {\n    document.body.scrollTop = 0;\n    document.documentElement.scrollTop = 0;\n  }\n}\n","<div (click)=\"scroll()\" class=\"scroll rounded-circle\">\n  <fa-icon class=\"close-search\" [icon]=\"faArrowUp\"></fa-icon>\n</div>\n","export class GetPostsServer {\r\n  data: { posts };\r\n\r\n  constructor(obj?: any) {\r\n    this.data = (obj && obj.data) || null;\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Post } from '../models/Post';\nimport {\n  faThumbsUp,\n  faThumbsDown,\n  faComment,\n  faTrashAlt,\n} from '@fortawesome/free-solid-svg-icons';\nimport { UserService } from '../user-service.service';\nimport { Router } from '@angular/router';\nimport { PostsService } from '../posts-service.service';\nimport { filter } from 'rxjs/operators';\n@Component({\n  selector: 'app-single-post',\n  templateUrl: './single-post.component.html',\n  styleUrls: ['./single-post.component.css'],\n})\nexport class SinglePostComponent implements OnInit {\n  @Input()\n  post: Post;\n  liked: number;\n  faThumbsUp = faThumbsUp;\n  faThumbsDown = faThumbsDown;\n  faComment = faComment;\n  faTrashAlt = faTrashAlt;\n  currentRoute;\n  constructor(\n    public userService: UserService,\n    private postsService: PostsService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.currentRoute = this.router.url;\n    if (this.userService.user) {\n      this.checkLikeDislike(this.post.post_id);\n    }\n  }\n\n  likeDislike(action) {\n    if (!this.userService.user) {\n      this.userService.setError('Please sign in first!');\n      this.router.navigateByUrl('/signin');\n      return;\n    }\n\n    this.postsService.likeDislikePost(this.post.post_id, action).subscribe(\n      (x) => {\n        if (this.liked == 2 && action) {\n          this.post.likes++;\n        }\n        if (this.liked == 2 && !action) {\n          this.post.dislikes++;\n        }\n        if (this.liked == 1 && action) {\n          this.post.likes--;\n        }\n        if (this.liked == 0 && !action) {\n          this.post.dislikes--;\n        }\n        if (this.liked == 0 && action) {\n          this.post.likes++;\n          this.post.dislikes--;\n        }\n        if (this.liked == 1 && !action) {\n          this.post.likes--;\n          this.post.dislikes++;\n        }\n\n        this.liked = x;\n      },\n      (e) => {\n        console.log(e);\n      }\n    );\n  }\n\n  checkLikeDislike(id) {\n    return this.postsService.checkLikeDislike(id).subscribe(\n      (x) => {\n        this.liked = x;\n      },\n      (e) => {\n        console.log(e);\n      }\n    );\n  }\n\n  deletePost() {\n    this.postsService.deletePost(this.post.post_id).subscribe(\n      (x) => {\n        let indexInMyPosts = this.postsService.myPosts.findIndex(\n          (p) => p.post_id == this.post.post_id\n        );\n        let indexInAllPosts = this.postsService.posts.findIndex(\n          (p) => p.post_id == this.post.post_id\n        );\n        this.postsService.myPosts.splice(indexInMyPosts, 1);\n        this.postsService.posts.splice(indexInAllPosts, 1);\n      },\n      (e) => {\n        console.log(e);\n      }\n    );\n  }\n}\n","<div class=\"card mt-5\">\n  <a [routerLink]=\"['/post', post.post_id]\">\n    <h5 class=\"card-title\">{{ post?.title | titlecase }}</h5>\n  </a>\n  <a [routerLink]=\"['/post', post.post_id]\">\n    <img\n      [src]=\"post?.image_public_url\"\n      class=\"card-img-top\"\n      [alt]=\"post?.title\"\n    />\n  </a>\n  <div class=\"card-body d-flex justify-content-between\">\n    <div class=\"post-data\">\n      <div class=\"post_author\">Created by : {{ post.author | titlecase }}</div>\n      <div class=\"post_date\">Date : {{ post.created_at | date }}</div>\n    </div>\n    <div class=\"post_buttons d-flex\">\n      <button\n        (click)=\"deletePost()\"\n        *ngIf=\"\n          post?.user_id == userService.user?.user_id &&\n          currentRoute == '/mymemes'\n        \"\n        class=\"btn btn-outline-dark d-flex align-items-center text-danger ml-2\"\n      >\n        <fa-icon [icon]=\"faTrashAlt\"></fa-icon>\n      </button>\n      <button\n        [routerLink]=\"['/post', post.post_id]\"\n        class=\"btn btn-outline-dark d-flex align-items-center ml-2\"\n      >\n        {{ post?.comments }} &nbsp;\n        <fa-icon [icon]=\"faComment\"></fa-icon>\n      </button>\n      <button\n        (click)=\"likeDislike(true)\"\n        class=\"btn btn-outline-dark d-flex align-items-center ml-2\"\n      >\n        {{ post?.likes }} &nbsp;\n        <fa-icon\n          [ngClass]=\"{ 'text-success': liked == 1 }\"\n          [icon]=\"faThumbsUp\"\n        ></fa-icon>\n      </button>\n      <button\n        (click)=\"likeDislike(false)\"\n        class=\"btn btn-outline-dark d-flex align-items-center ml-2\"\n      >\n        {{ post?.dislikes }} &nbsp;\n        <fa-icon\n          [ngClass]=\"{ 'text-danger': liked == 0 }\"\n          [icon]=\"faThumbsDown\"\n        ></fa-icon>\n      </button>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport {\n  faHeart,\n  faUserAlt,\n  faSignOutAlt,\n  faPlus,\n} from '@fortawesome/free-solid-svg-icons';\nimport { UserService } from 'src/app/user-service.service';\n@Component({\n  selector: 'app-side-nav',\n  templateUrl: './side-nav.component.html',\n  styleUrls: ['./side-nav.component.css'],\n})\nexport class SideNavComponent implements OnInit {\n  faHeart = faHeart;\n  faUserAlt = faUserAlt;\n  faSignOutAlt = faSignOutAlt;\n  faPlus = faPlus;\n  @Input()\n  showing: boolean;\n  @Output()\n  closeEvent = new EventEmitter();\n  constructor(public userProvider: UserService) {}\n\n  ngOnInit(): void {}\n\n  close() {\n    this.closeEvent.emit(false);\n  }\n}\n","<div (click)=\"close()\" [ngClass]=\"{ show: showing }\" class=\"side-nav\">\n  <div class=\"content\">\n    <app-side-nav-content></app-side-nav-content>\n    <div class=\"experiment\"></div>\n  </div>\n</div>\n","export class Post {\r\n  post_id: number;\r\n  title: string;\r\n  image_public_url: string;\r\n  likes: number;\r\n  dislikes: number;\r\n  created_at: string;\r\n  author: string;\r\n  comments: string;\r\n  user_id: number;\r\n\r\n  constructor(obj?: any) {\r\n    this.post_id = (obj && obj.post_id) || null;\r\n    this.title = (obj && obj.title) || null;\r\n    this.image_public_url = (obj && obj.image_public_url) || null;\r\n    this.likes = (obj && obj.likes) || 0;\r\n    this.dislikes = (obj && obj.dislikes) || 0;\r\n    this.comments = (obj && obj.comments) || 0;\r\n    this.user_id = (obj && obj.user_id) || null;\r\n    this.author = (obj && obj.author) || null;\r\n    this.created_at = (obj && obj.created_at) || null;\r\n  }\r\n}\r\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { UserService } from 'src/app/user-service.service';\nimport {\n  faHamburger,\n  faUserPlus,\n  faSignOutAlt,\n  faSignInAlt,\n  faWindowClose,\n  faSearch,\n} from '@fortawesome/free-solid-svg-icons';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport { PostsService } from 'src/app/posts-service.service';\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css'],\n})\nexport class NavbarComponent implements OnInit {\n  currentRoute;\n  faHamburger = faHamburger;\n  faSignOutAlt = faSignOutAlt;\n  faUserPlus = faUserPlus;\n  faSignInAlt = faSignInAlt;\n  faWindowClose = faWindowClose;\n  faSearch = faSearch;\n  showSearch = false;\n  @ViewChild('myDiv') divView: ElementRef;\n\n  @Input()\n  sideNavShowing;\n  @Output()\n  showHideSideNav = new EventEmitter<boolean>();\n  constructor(\n    public provider: UserService,\n    private router: Router,\n    public postsProvider: PostsService\n  ) {}\n\n  ngOnInit(): void {\n    this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe((event: NavigationEnd) => {\n        this.currentRoute = event.url;\n      });\n  }\n\n  toggleSideNav() {\n    this.showHideSideNav.emit(!this.sideNavShowing);\n  }\n\n  toggleSearch() {\n    if (this.showSearch && this.postsProvider.like) {\n      this.postsProvider.like = '';\n      this.postsProvider.page = 1;\n      this.postsProvider.posts.length = 0;\n      this.postsProvider.getPosts();\n    }\n\n    this.showSearch = !this.showSearch;\n    if (this.showSearch) {\n      let t = setTimeout(() => {\n        this.divView.nativeElement.focus();\n\n        clearTimeout(t);\n      }, 50);\n    }\n  }\n\n  search(e) {\n    this.postsProvider.like = e.target.value;\n    this.postsProvider.page = 1;\n    this.postsProvider.posts.length = 0;\n    this.postsProvider.getPosts();\n  }\n}\n","<nav class=\"navbar navbar-expand-lg fixed-top navbar-light bg-light\">\n  <div class=\"container-fluid\">\n    <a\n      class=\"navbar-brand\"\n      [routerLink]=\"['/']\"\n      routerLinkActive=\"router-link-active\"\n      ><img src=\"../../../assets/logo.svg\" alt=\"logo\" />\n      <span class=\"hidden\"> Dank Memes </span>\n    </a>\n\n    <!-- search -->\n    <div *ngIf=\"showSearch && currentRoute == '/'\" class=\"input-group search\">\n      <input\n        type=\"text\"\n        #myDiv\n        [value]=\"postsProvider.like\"\n        (keyup)=\"search($event)\"\n        class=\"form-control search-input\"\n        placeholder=\"Search\"\n        aria-label=\"Recipient's username\"\n        aria-describedby=\"button-addon2\"\n      />\n\n      <button\n        class=\"close-btn\"\n        type=\"button\"\n        id=\"button-addon2\"\n        (click)=\"toggleSearch()\"\n      >\n        <fa-icon class=\"close-search\" [icon]=\"faWindowClose\"></fa-icon>\n      </button>\n    </div>\n    <!-- search -->\n    <ul class=\"navbar-nav d-flex flex-row align-items-center\">\n      <!-- magnifying glass -->\n      <fa-icon\n        class=\"mr-2\"\n        *ngIf=\"!showSearch && currentRoute == '/'\"\n        (click)=\"toggleSearch()\"\n        [icon]=\"faSearch\"\n      ></fa-icon>\n      <!-- magnifying glass -->\n\n      <li *ngIf=\"!provider.user && currentRoute == '/signin'\" class=\"nav-item\">\n        <a\n          class=\"nav-link\"\n          [routerLink]=\"['/signup']\"\n          routerLinkActive=\"router-link-active\"\n          >Register <fa-icon [icon]=\"faUserPlus\"></fa-icon\n        ></a>\n      </li>\n      <li\n        *ngIf=\"!provider.user && currentRoute !== '/signin'\"\n        class=\"nav-item ml-2\"\n      >\n        <a\n          class=\"nav-link\"\n          [routerLink]=\"['/signin']\"\n          routerLinkActive=\"router-link-active\"\n          >Login <fa-icon [icon]=\"faSignInAlt\"></fa-icon\n        ></a>\n      </li>\n\n      <li class=\"nav-item ml-2 d-none showing\" (click)=\"toggleSideNav()\">\n        <a class=\"nav-link\" routerLinkActive=\"router-link-active\">\n          <fa-icon [icon]=\"faHamburger\"></fa-icon\n        ></a>\n      </li>\n    </ul>\n  </div>\n</nav>\n","<app-navbar\n  [sideNavShowing]=\"sideNavShowing\"\n  (showHideSideNav)=\"toggleSideNav($event)\"\n></app-navbar>\n<app-side-nav\n  (closeEvent)=\"toggleSideNav($event)\"\n  [showing]=\"sideNavShowing\"\n></app-side-nav>\n<app-scroll-to-top *ngIf=\"postsProvider.showToTheTop\"></app-scroll-to-top>\n<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport { PostsService } from './posts-service.service';\nimport { UserService } from './user-service.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  title = 'client';\n  sideNavShowing = false;\n  current = 0;\n  constructor(\n    private userService: UserService,\n    public postsProvider: PostsService\n  ) {}\n  ngOnInit() {\n    this.userService.getUser();\n    this.regulate();\n    this.postsProvider.getPosts();\n  }\n  toggleSideNav(e) {\n    this.sideNavShowing = e;\n  }\n\n  regulate() {\n    let nav = document.querySelector('.navbar') as HTMLElement;\n    document.addEventListener('scroll', () => {\n      let scrolled = window.pageYOffset;\n      if (scrolled > 1000) {\n        this.postsProvider.showToTheTop = true;\n      } else {\n        this.postsProvider.showToTheTop = false;\n      }\n      if (this.current - scrolled < 0) {\n        nav.style.transform = 'translateY(-120%)';\n      } else {\n        nav.style.transform = 'translateY(0%)';\n      }\n      this.current = window.pageYOffset;\n    });\n  }\n}\n","export class Comment {\r\n  comment_id: number;\r\n  user_id: number;\r\n  post_id: number;\r\n  body: string;\r\n  reply_to: number;\r\n  created_at: string;\r\n  likes: number;\r\n  dislikes: number;\r\n  subcomments: number;\r\n  parrent_comment_author: string;\r\n  user_name: string;\r\n\r\n  constructor(obj?: any) {\r\n    (this.comment_id = (obj && obj.comment_id) || null),\r\n      (this.user_id = (obj && obj.user_id) || null),\r\n      (this.post_id = (obj && obj.post_id) || null),\r\n      (this.body = (obj && obj.body) || null),\r\n      (this.reply_to = (obj && obj.reply_to) || null),\r\n      (this.created_at = (obj && obj.created_at) || null),\r\n      (this.likes = (obj && obj.likes) || null),\r\n      (this.dislikes = (obj && obj.dislikes) || null),\r\n      (this.subcomments = (obj && obj.subcomments) || null),\r\n      (this.user_name = (obj && obj.user_name) || null),\r\n      (this.parrent_comment_author =\r\n        (obj && obj.parrent_comment_author) || null);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './core/navbar/navbar.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { SigninComponent } from './signin/signin.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { HomeComponent } from './home/home.component';\nimport { SinglePostComponent } from './single-post/single-post.component';\nimport { TokenItnerceptorService } from './token-itnerceptor.service';\nimport { SinglePostPageComponent } from './single-post-page/single-post-page.component';\nimport { SideNavComponent } from './core/side-nav/side-nav.component';\nimport { AddNewPostComponent } from './add-new-post/add-new-post.component';\nimport { CommentsComponent } from './comments/comments.component';\nimport { SingleCommentComponent } from './single-comment/single-comment.component';\nimport { PostCommentComponent } from './post-comment/post-comment.component';\n\nimport { SingleCommentPreviewComponent } from './single-comment-preview/single-comment-preview.component';\nimport { SideNavContentComponent } from './core/side-nav-content/side-nav-content.component';\nimport { PostsILikeComponent } from './posts-ilike/posts-ilike.component';\nimport { MyMemesComponent } from './my-memes/my-memes.component';\nimport { AuthGuard } from './auth.guard';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { ScrollToTopComponent } from './core/scroll-to-top/scroll-to-top.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    SigninComponent,\n    SignupComponent,\n    HomeComponent,\n    SinglePostComponent,\n    SinglePostPageComponent,\n    SideNavComponent,\n    AddNewPostComponent,\n    CommentsComponent,\n    SingleCommentComponent,\n    PostCommentComponent,\n\n    SingleCommentPreviewComponent,\n\n    SideNavContentComponent,\n\n    PostsILikeComponent,\n\n    MyMemesComponent,\n\n    NotFoundComponent,\n\n    ScrollToTopComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FontAwesomeModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenItnerceptorService,\n      multi: true,\n    },\n    AuthGuard,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport { CommentsService } from '../comments.service';\n\n@Component({\n  selector: 'app-comments',\n  templateUrl: './comments.component.html',\n  styleUrls: ['./comments.component.css'],\n})\nexport class CommentsComponent implements OnInit {\n  /*  @Input() */\n  postId: number;\n\n  constructor(\n    public commentsProvider: CommentsService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.getPostId();\n    this.commentsProvider.getAllComments(this.postId);\n  }\n  getPostId() {\n    this.route.params.pipe(map((p) => p.id)).subscribe((x) => {\n      this.postId = x;\n    });\n  }\n}\n","<div class=\"container-fluid d-flex flex-column align-items-center w-100\">\n  <div\n    *ngIf=\"commentsProvider.loadingComments\"\n    class=\"spinner-border text-primary\"\n    role=\"status\"\n  >\n    <span class=\"sr-only\">Loading...</span>\n  </div>\n\n  <app-single-comment\n    class=\"w-90 mt-3\"\n    *ngFor=\"let comment of commentsProvider.comments\"\n    [comment]=\"comment\"\n  ></app-single-comment>\n</div>\n","import { Post } from './Post';\r\nexport class PostsList {\r\n  posts: Post[];\r\n  /**\r\n   *\r\n   */\r\n  constructor(obj?: any) {\r\n    this.posts = (obj && obj.posts) || null;\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Comment } from './models/Comment';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { GetCommentsServer } from './models/GetCommentsServer';\nimport { Location } from '@angular/common';\n@Injectable({\n  providedIn: 'root',\n})\nexport class CommentsService {\n  url: string = 'https://rajko-meme-app.herokuapp.com/api/comments/';\n  loadingComments: boolean;\n  comments: Comment[] = [];\n  loadingSubcomments: boolean = true;\n  subcomments: Comment[] = [];\n  singleCommentExists: boolean = false;\n  constructor(private http: HttpClient, private location: Location) {}\n\n  getAllComments(id) {\n    this.loadingComments = true;\n    this.http\n      .get<{ data: { comments: Comment[] } }>(this.url + 'post/' + id)\n      .pipe(\n        map(\n          (x) => {\n            this.comments = x.data.comments;\n\n            this.loadingComments = false;\n          },\n          (e) => {\n            console.log(e);\n            this.loadingComments = false;\n          }\n        )\n      )\n      .subscribe();\n  }\n\n  likeDislikeComment(id, action) {\n    return this.http.post(this.url + 'likedislike/' + id, { action }).pipe(\n      map((x: { data: { status: number } }) => {\n        return x.data.status;\n      })\n    );\n  }\n\n  checkLikeDislike(id) {\n    /*   const token = localStorage.getItem('token');\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`,\n    }); */\n    return this.http\n      .get(this.url + 'likedislike/' + id /* , { headers } */)\n      .pipe(\n        map((x: { data: { status: number } }) => {\n          return x.data.status;\n        })\n      );\n  }\n\n  deleteComment(id, partOfPreviewComponent?) {\n    this.http.delete(this.url + id).subscribe(\n      (x) => {\n        if (partOfPreviewComponent) {\n          this.location.back();\n          this.singleCommentExists = false;\n        }\n        let indexInComments = this.comments.findIndex(\n          (x) => x.comment_id == id\n        );\n        let indexInSubcomments = this.subcomments.findIndex(\n          (x) => x.comment_id == id\n        );\n\n        this.comments.splice(indexInComments, 1);\n        this.subcomments.splice(indexInSubcomments, 1);\n        this.removeDependingComments(id);\n        this.removeDependingSubcomments(id);\n      },\n      (e) => {\n        console.log(e);\n      }\n    );\n  }\n\n  removeDependingComments(id) {\n    let dependingComments = this.comments.filter((c) => c.reply_to == id);\n    dependingComments.forEach((d) => {\n      let index = this.comments.findIndex((c) => c.comment_id == d.comment_id);\n      this.comments.splice(index, 1);\n      this.removeDependingComments(d.comment_id);\n    });\n  }\n\n  removeDependingSubcomments(id) {\n    let dependingSubcomments = this.subcomments.filter((c) => c.reply_to == id);\n    dependingSubcomments.forEach((d) => {\n      let index = this.subcomments.findIndex(\n        (c) => c.comment_id == d.comment_id\n      );\n      this.subcomments.splice(index, 1);\n    });\n  }\n\n  postComment(body, post_id, reply_to?) {\n    let payload = { body, post_id };\n    if (reply_to) {\n      payload['reply_to'] = reply_to;\n    }\n    return this.http\n      .post<{ data: { comment: Comment } }>(this.url, payload)\n      .pipe(\n        map((x) => {\n          return new Comment(x.data.comment);\n        })\n      )\n      .subscribe(\n        (x) => {\n          this.comments.unshift(x);\n          this.subcomments.unshift(x);\n          let index = this.comments.findIndex(\n            (c) => c.comment_id == x.reply_to\n          );\n\n          if (index > 0) {\n            this.comments[index].subcomments++;\n          }\n        },\n        (e) => {\n          console.log(e);\n        }\n      );\n  }\n\n  getSingleComment(id): Observable<Comment> {\n    return this.http.get<{ data: { comment: Comment } }>(this.url + id).pipe(\n      map((x) => {\n        return new Comment(x.data.comment);\n      })\n    );\n  }\n\n  getSubcomments(id) {\n    return this.http\n      .get<GetCommentsServer>(this.url + 'subcomments/' + id)\n      .pipe(\n        map((x) => {\n          return new GetCommentsServer(x);\n        })\n      )\n      .subscribe((x) => {\n        this.subcomments = x.data.comments;\n        this.loadingSubcomments = false;\n      });\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Comment } from '../models/Comment';\nimport {\n  faThumbsUp,\n  faThumbsDown,\n  faComment,\n  faTrash,\n  faReply,\n} from '@fortawesome/free-solid-svg-icons';\nimport { CommentsService } from '../comments.service';\nimport { UserService } from '../user-service.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-single-comment',\n  templateUrl: './single-comment.component.html',\n  styleUrls: ['./single-comment.component.css'],\n})\nexport class SingleCommentComponent implements OnInit {\n  @Input()\n  comment: Comment;\n  @Input()\n  partOfPreviewComponent: boolean;\n  liked: number;\n  faThumbsUp = faThumbsUp;\n  faThumbsDown = faThumbsDown;\n  faComment = faComment;\n  faTrash = faTrash;\n  faReply = faReply;\n  showReply = false;\n  constructor(\n    private commentsProvider: CommentsService,\n    public userService: UserService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    if (this.userService.user) {\n      this.checkLikeDislike(this.comment.comment_id);\n    }\n  }\n  checkLikeDislike(id) {\n    return this.commentsProvider.checkLikeDislike(id).subscribe(\n      (x) => {\n        this.liked = x;\n      },\n      (e) => {\n        console.log(e);\n      }\n    );\n  }\n\n  likeDislike(action) {\n    if (!this.userService.user) {\n      this.userService.setError('Please sign in first!');\n      this.router.navigateByUrl('/signin');\n      return;\n    }\n\n    this.commentsProvider\n      .likeDislikeComment(this.comment.comment_id, action)\n      .subscribe(\n        (x) => {\n          if (this.liked == 2 && action) {\n            this.comment.likes++;\n          }\n          if (this.liked == 2 && !action) {\n            this.comment.dislikes++;\n          }\n          if (this.liked == 1 && action) {\n            this.comment.likes--;\n          }\n          if (this.liked == 0 && !action) {\n            this.comment.dislikes--;\n          }\n          if (this.liked == 0 && action) {\n            this.comment.likes++;\n            this.comment.dislikes--;\n          }\n          if (this.liked == 1 && !action) {\n            this.comment.likes--;\n            this.comment.dislikes++;\n          }\n\n          this.liked = x;\n        },\n        (e) => {\n          console.log(e);\n        }\n      );\n  }\n\n  setShowReply() {\n    this.showReply = !this.showReply;\n  }\n\n  deleteComment() {\n    this.commentsProvider.deleteComment(\n      this.comment.comment_id,\n      this.partOfPreviewComponent\n    );\n  }\n}\n","<div class=\"comment p-2\">\n  <div class=\"comment_header d-flex justify-content-between\">\n    <div class=\"div\">\n      <span class=\"comment_author\">{{ comment.user_name | titlecase }}</span>\n      <a\n        [routerLink]=\"['/post', comment.post_id, 'comment', comment.reply_to]\"\n        routerLinkActive=\"router-link-active\"\n        *ngIf=\"comment.parrent_comment_author\"\n        class=\"comment_reply_to ml-3\"\n        >in reply to: {{ comment.parrent_comment_author | titlecase }} 's\n        comment</a\n      >\n    </div>\n    <span class=\"comment_date font-italic\">{{\n      comment.created_at | date\n    }}</span>\n  </div>\n  <div\n    [routerLink]=\"['/post', comment.post_id, 'comment', comment.comment_id]\"\n    class=\"comment_body lead p-1\"\n  >\n    {{ comment.body | titlecase }}\n  </div>\n  <div class=\"comment_footer d-flex flex-column justify-content-end\">\n    <div class=\"comment_buttons d-flex ml-auto mb-2\">\n      <button\n        (click)=\"deleteComment()\"\n        *ngIf=\"comment.user_id == userService.user?.user_id\"\n        class=\"btn btn-outline-dark d-flex align-items-center ml-2 text-danger\"\n      >\n        <fa-icon [icon]=\"faTrash\"></fa-icon>\n      </button>\n      <button\n        (click)=\"setShowReply()\"\n        class=\"btn btn-outline-dark d-flex align-items-center ml-2\"\n      >\n        <fa-icon [icon]=\"faReply\"></fa-icon>\n      </button>\n      <button\n        [routerLink]=\"['/post', comment.post_id, 'comment', comment.comment_id]\"\n        class=\"btn btn-outline-dark d-flex align-items-center ml-2\"\n      >\n        {{ comment.subcomments }} &nbsp;\n        <fa-icon [icon]=\"faComment\"></fa-icon>\n      </button>\n      <button\n        (click)=\"likeDislike(true)\"\n        class=\"btn btn-outline-dark d-flex align-items-center ml-2\"\n      >\n        {{ comment?.likes }} &nbsp;\n        <fa-icon\n          [ngClass]=\"{ 'text-success': liked == 1 }\"\n          [icon]=\"faThumbsUp\"\n        ></fa-icon>\n      </button>\n      <button\n        (click)=\"likeDislike(false)\"\n        class=\"btn btn-outline-dark d-flex align-items-center ml-2\"\n      >\n        {{ comment?.dislikes }} &nbsp;\n        <fa-icon\n          [ngClass]=\"{ 'text-danger': liked == 0 }\"\n          [icon]=\"faThumbsDown\"\n        ></fa-icon>\n      </button>\n    </div>\n    <app-post-comment\n      *ngIf=\"showReply\"\n      [comment]=\"comment\"\n      [postId]=\"comment.post_id\"\n    ></app-post-comment>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<img src=\"../../assets/404.jpg\" alt=\"Page not found\" />\n","<div class=\"everything mt-0\">\n  <div class=\"side mt-0\">\n    <div class=\"lll mt-0\">\n      <app-side-nav-content></app-side-nav-content>\n      <div class=\"experiment\"></div>\n    </div>\n  </div>\n  <div class=\"main mt-4\">\n    <app-single-post\n      class=\"d-flex justify-content-center\"\n      *ngFor=\"let post of likedPosts\"\n      [post]=\"post\"\n    ></app-single-post>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Post } from '../models/Post';\nimport { PostsService } from '../posts-service.service';\n\n@Component({\n  selector: 'app-posts-ilike',\n  templateUrl: './posts-ilike.component.html',\n  styleUrls: ['./posts-ilike.component.css'],\n})\nexport class PostsILikeComponent implements OnInit {\n  likedPosts: Post[];\n\n  constructor(private postsProvider: PostsService) {}\n\n  ngOnInit(): void {\n    this.getPosts();\n  }\n\n  getPosts() {\n    this.postsProvider.getLikedPosts().subscribe(\n      (x) => {\n        this.likedPosts = x;\n      },\n      (e) => {\n        console.log(e);\n      }\n    );\n  }\n}\n","import { HttpInterceptor } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TokenItnerceptorService implements HttpInterceptor {\n  constructor() {}\n\n  intercept(req, next) {\n    let token = localStorage.getItem('token');\n    let tokenizedReq = req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    return next.handle(tokenizedReq);\n  }\n}\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { GetPostsServer } from './models/GetPostsServer';\nimport { Post } from './models/Post';\nimport { PostsList } from './models/PostsList';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PostsService {\n  url: string = 'https://rajko-meme-app.herokuapp.com/api/posts/';\n  page = 1;\n  order_by = 'created_at';\n  order = 2;\n  like = '';\n  posts: Post[] = [];\n  loadingPosts: boolean = false;\n  noContent = false;\n  showToTheTop: boolean = false;\n  myPosts: Post[];\n  constructor(private http: HttpClient) {}\n\n  getPosts() {\n    this.loadingPosts = true;\n    let params = new HttpParams()\n      .set('page', this.page.toString())\n      .set('order_by', this.order_by)\n      .set('order', this.order.toString())\n      .set('like', this.like);\n\n    this.http\n      .get<{ data: { posts: Post } }>(this.url, { params: params })\n      .pipe(\n        map((x) => {\n          return new PostsList(x.data);\n        })\n      )\n      .subscribe(\n        (x) => {\n          if (!x.posts.length) {\n            this.noContent = true;\n          } else {\n            this.noContent = false;\n          }\n          x.posts.forEach((p) => {\n            this.posts.push(p);\n          });\n          this.loadingPosts = false;\n        },\n        (e) => {\n          this.loadingPosts = false;\n          console.log(e);\n        }\n      );\n    this.page++;\n  }\n\n  getSinglePost(id): Observable<Post> {\n    return this.http.get<{ data: { post: Post } }>(this.url + id).pipe(\n      map((x) => {\n        return new Post(x.data.post);\n      })\n    );\n  }\n\n  getLikedPosts(): Observable<Post[]> {\n    return this.http.get<GetPostsServer>(this.url + 'liked').pipe(\n      map((x) => {\n        let serverResponse = new GetPostsServer(x);\n        return serverResponse.data.posts;\n      })\n    );\n  }\n\n  getMyPosts() {\n    return this.http\n      .get<GetPostsServer>(this.url + 'my')\n      .pipe(\n        map((x) => {\n          let serverResponse = new GetPostsServer(x);\n          return serverResponse.data.posts;\n        })\n      )\n      .subscribe(\n        (x) => {\n          this.myPosts = x;\n        },\n        (e) => {\n          console.log(e);\n        }\n      );\n  }\n\n  checkLikeDislike(id) {\n    /*   const token = localStorage.getItem('token');\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`,\n    }); */\n    return this.http\n      .get(this.url + 'likedislike/' + id /* , { headers } */)\n      .pipe(\n        map((x: { data: { status: number } }) => {\n          return x.data.status;\n        })\n      );\n  }\n\n  likeDislikePost(id, action) {\n    return this.http.post(this.url + 'likedislike/' + id, { action }).pipe(\n      map((x: { data: { status: number } }) => {\n        return x.data.status;\n      })\n    );\n  }\n\n  addNewPost(formData: FormData): Observable<Post> {\n    return this.http.post(this.url, formData).pipe(\n      map((x: { data: { post: Post } }) => {\n        return new Post(x.data.post);\n      })\n    );\n  }\n\n  deletePost(id) {\n    return this.http.delete(this.url + id);\n  }\n}\n","import { Comment } from './Comment';\r\n\r\nexport class GetCommentsServer {\r\n  data: {\r\n    comments: Comment[];\r\n  };\r\n  /**\r\n   *\r\n   */\r\n  constructor(obj?: any) {\r\n    this.data = (obj && obj.data) || null;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport { CommentsService } from '../comments.service';\nimport { Post } from '../models/Post';\nimport { PostsService } from '../posts-service.service';\n\n@Component({\n  selector: 'app-single-post-page',\n  templateUrl: './single-post-page.component.html',\n  styleUrls: ['./single-post-page.component.css'],\n})\nexport class SinglePostPageComponent implements OnInit {\n  post: Post;\n  currentPostId: number;\n\n  constructor(\n    private postsProvider: PostsService,\n    private route: ActivatedRoute,\n    public commentsProvider: CommentsService\n  ) {}\n\n  ngOnInit(): void {\n    this.getPostId();\n    this.getPost();\n  }\n\n  getPostId() {\n    this.route.params.pipe(map((p) => p.id)).subscribe((x) => {\n      this.currentPostId = x;\n    });\n  }\n\n  getPost() {\n    this.postsProvider.getSinglePost(this.currentPostId).subscribe(\n      (x) => {\n        this.post = x;\n      },\n      (e) => {\n        console.log(e);\n      }\n    );\n  }\n}\n","<div class=\"everything mt-0\">\n  <div class=\"side mt-0\">\n    <div class=\"lll mt-0\">\n      <app-side-nav-content></app-side-nav-content>\n      <div class=\"experiment\"></div>\n    </div>\n  </div>\n  <div class=\"d-flex flex-column justify-content-center align-items-center\">\n    <div class=\"container\">\n      <app-single-post\n        *ngIf=\"post\"\n        class=\"d-flex justify-content-center mt-5\"\n        [post]=\"post\"\n      ></app-single-post>\n    </div>\n    <div class=\"post-comment mt-2\">\n      <app-post-comment [postId]=\"currentPostId\"></app-post-comment>\n    </div>\n    <div class=\"container-fluid comments-list\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { UserService } from '../user-service.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css'],\n})\nexport class SignupComponent implements OnInit {\n  form: FormGroup;\n  constructor(private fb: FormBuilder, public provider: UserService) {}\n\n  ngOnInit(): void {\n    this.initializeForm();\n  }\n\n  initializeForm(): void {\n    this.form = this.fb.group(\n      {\n        username: new FormControl('', Validators.required),\n        email: new FormControl('', [Validators.email, Validators.required]),\n        password: new FormControl('', [\n          Validators.minLength(6),\n          Validators.required,\n        ]),\n        password2: new FormControl('', [Validators.required]),\n      },\n      {\n        validator: this.comparePasswords('password', 'password2'),\n      }\n    );\n  }\n\n  comparePasswords(password, password2) {\n    return (formGroup: FormGroup) => {\n      const pas = formGroup.controls[password];\n      const pas2 = formGroup.controls[password2];\n\n      if (pas.value !== pas2.value) {\n        pas2.setErrors({ passwordMismatch: true });\n      } else {\n        pas2.setErrors(null);\n      }\n    };\n  }\n\n  register() {\n    let credentials = {\n      name: this.form.get('username').value,\n      email: this.form.get('email').value,\n      password: this.form.get('password').value,\n    };\n    console.log(credentials);\n\n    this.provider.register(credentials);\n  }\n}\n","<form class=\"sign\" (ngSubmit)=\"register()\" [formGroup]=\"form\">\n  <h3 class=\"text-center mb-5\">Signup</h3>\n  <div class=\"form-group\">\n    <label for=\"exampleInputPassword1\">Username</label>\n    <input\n      type=\"text\"\n      [ngClass]=\"{\n        'is-invalid':\n          form.get('username').invalid && form.get('username').touched\n      }\"\n      formControlName=\"username\"\n      class=\"form-control\"\n      placeholder=\"Username\"\n    />\n    <small\n      class=\"error-message\"\n      *ngIf=\"form.get('username').invalid && form.get('username').touched\"\n      >Username is required</small\n    >\n  </div>\n  <div class=\"form-group\">\n    <label for=\"exampleInputEmail1\">Email address</label>\n\n    <input\n      type=\"email\"\n      formControlName=\"email\"\n      class=\"form-control\"\n      [ngClass]=\"{\n        'is-invalid': form.get('email').invalid && form.get('email').touched\n      }\"\n      id=\"exampleInputEmail1\"\n      aria-describedby=\"emailHelp\"\n      placeholder=\"Enter email\"\n    />\n\n    <small\n      class=\"error-message\"\n      *ngIf=\"\n        form.get('email').hasError('required') && form.get('email').touched\n      \"\n      >Email is required</small\n    >\n    <small\n      class=\"error-message\"\n      *ngIf=\"form.get('email').hasError('email') && form.get('email').touched\"\n      >Invalid email format</small\n    >\n  </div>\n  <div class=\"form-group\">\n    <label for=\"exampleInputPassword1\">Password</label>\n    <input\n      type=\"password\"\n      formControlName=\"password\"\n      [ngClass]=\"{\n        'is-invalid':\n          form.get('password').invalid && form.get('password').touched\n      }\"\n      class=\"form-control\"\n      placeholder=\"Password\"\n    />\n    <small\n      class=\"error-message\"\n      *ngIf=\"\n        form.get('password').hasError('minlength') &&\n        form.get('password').touched\n      \"\n      >Password must be at least 6 characters long.</small\n    >\n    <small\n      class=\"error-message\"\n      *ngIf=\"\n        form.get('password').hasError('required') &&\n        form.get('password').touched\n      \"\n      >Password is required.</small\n    >\n  </div>\n  <div class=\"form-group\">\n    <label for=\"exampleInputPassword1\">Confirm Password</label>\n    <input\n      type=\"password\"\n      formControlName=\"password2\"\n      class=\"form-control\"\n      [ngClass]=\"{\n        'is-invalid':\n          form.get('password2').invalid && form.get('password2').touched\n      }\"\n      id=\"exampleInputPassword1\"\n      placeholder=\"Confirm Password\"\n    />\n    <small\n      class=\"error-message\"\n      *ngIf=\"\n        form.get('password2').hasError('required') &&\n        form.get('password2').touched\n      \"\n      >Please confirm your password</small\n    >\n    <small\n      class=\"error-message\"\n      *ngIf=\"form.get('password2').errors && form.get('password2').touched\"\n    >\n      Passwords do not match\n    </small>\n  </div>\n\n  <button\n    [disabled]=\"form.invalid\"\n    type=\"submit\"\n    class=\"btn btn-primary d-block m-auto\"\n  >\n    Submit\n  </button>\n  <span class=\"lead d-block m-auto text-center mt-3\">\n    Already have an account?\n    <a [routerLink]=\"['/signin']\" routerLinkActive=\"router-link-active\"\n      >Sign in</a\n    >\n  </span>\n  <div\n    class=\"text-danger m-auto text-center\"\n    *ngFor=\"let error of provider.errors\"\n  >\n    {{ error.msg }}\n  </div>\n</form>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\nimport { UserService } from './user-service.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private userProvider: UserService, private router: Router) {}\n\n  canActivate(): boolean {\n    let user = localStorage.getItem('user');\n    if (user) {\n      return true;\n    } else {\n      this.userProvider.setError('Please log in to see this page !');\n      this.router.navigateByUrl('/signin');\n\n      return false;\n    }\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/user-service.service';\nimport {\n  faHeart,\n  faUserAlt,\n  faSignOutAlt,\n  faPlus,\n} from '@fortawesome/free-solid-svg-icons';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { PostsService } from 'src/app/posts-service.service';\n\nimport { Location } from '@angular/common';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n@Component({\n  selector: 'app-side-nav-content',\n  templateUrl: './side-nav-content.component.html',\n  styleUrls: ['./side-nav-content.component.css'],\n})\nexport class SideNavContentComponent implements OnInit, OnDestroy {\n  faHeart = faHeart;\n  faUserAlt = faUserAlt;\n  faSignOutAlt = faSignOutAlt;\n  faPlus = faPlus;\n  currentRoute;\n  subscription: Subscription;\n\n  constructor(\n    public userProvider: UserService,\n    public postsProvider: PostsService,\n    private router: Router,\n\n    public location: Location\n  ) {}\n\n  ngOnInit(): void {\n    this.currentRoute = this.location.path() || '/';\n    this.subscription = this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe((event: NavigationEnd) => {\n        if (event.url) {\n          this.currentRoute = event.url || '/';\n        }\n      });\n  }\n\n  logout() {\n    this.userProvider.logout();\n  }\n\n  preventPropagation(e) {\n    e.stopPropagation();\n  }\n\n  setOrderBy(e) {\n    this.postsProvider.order_by = e.target.value;\n    this.postsProvider.page = 1;\n    this.postsProvider.posts.length = 0;\n    this.postsProvider.getPosts();\n  }\n\n  setOrder(e) {\n    this.postsProvider.order = e.target.value;\n    this.postsProvider.page = 1;\n    this.postsProvider.posts.length = 0;\n    this.postsProvider.getPosts();\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","<div class=\"content\">\n  <img src=\"../../../assets/jao.png\" alt=\"jao\" />\n  <div\n    [routerLink]=\"['/mymemes']\"\n    *ngIf=\"userProvider.user\"\n    class=\"side-nav-item\"\n  >\n    <fa-icon class=\"mr-2\" [icon]=\"faUserAlt\"></fa-icon> My Memes\n  </div>\n  <div\n    [routerLink]=\"['/liked']\"\n    *ngIf=\"userProvider.user\"\n    class=\"side-nav-item\"\n  >\n    <fa-icon class=\"mr-2\" [icon]=\"faHeart\"></fa-icon> Memes I Like\n  </div>\n\n  <div\n    class=\"side-nav-item\"\n    [routerLink]=\"['/new']\"\n    routerLinkActive=\"router-link-active\"\n  >\n    <fa-icon class=\"mr-2\" [icon]=\"faPlus\"></fa-icon>\n    Post a meme\n  </div>\n  <div (click)=\"logout()\" *ngIf=\"userProvider.user\" class=\"side-nav-item\">\n    <fa-icon class=\"mr-2\" [icon]=\"faSignOutAlt\"></fa-icon> Logout\n  </div>\n  <!-- pagination params -->\n\n  <div\n    *ngIf=\"currentRoute == '/'\"\n    (click)=\"preventPropagation($event)\"\n    class=\"pagination-params\"\n  >\n    <div class=\"form-group\">\n      <label for=\"exampleFormControlSelect1\">Sort By</label>\n      <select\n        (change)=\"setOrderBy($event)\"\n        [value]=\"postsProvider.order_by\"\n        class=\"form-control\"\n        id=\"exampleFormControlSelect1\"\n      >\n        <option value=\"created_at\">Date</option>\n        <option value=\"likes\">Likes</option>\n        <option value=\"dislikes\">Dislikes</option>\n        <option value=\"comments\">Comments</option>\n      </select>\n\n      <label for=\"exampleFormControlSelect1\">Sort Order</label>\n      <select\n        (change)=\"setOrder($event)\"\n        class=\"form-control\"\n        id=\"exampleFormControlSelect1\"\n      >\n        <option value=\"2\">Descending</option>\n        <option value=\"1\">Ascending</option>\n      </select>\n    </div>\n  </div>\n  <div\n    *ngIf=\"userProvider.user\"\n    (click)=\"preventPropagation($event)\"\n    class=\"pagination-params\"\n  >\n    Logged in as {{ userProvider.user.user_name | titlecase }}\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AddNewPostComponent } from './add-new-post/add-new-post.component';\nimport { AuthGuard } from './auth.guard';\nimport { CommentsComponent } from './comments/comments.component';\n\nimport { HomeComponent } from './home/home.component';\nimport { MyMemesComponent } from './my-memes/my-memes.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { PostsILikeComponent } from './posts-ilike/posts-ilike.component';\nimport { SigninComponent } from './signin/signin.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { SingleCommentPreviewComponent } from './single-comment-preview/single-comment-preview.component';\nimport { SinglePostPageComponent } from './single-post-page/single-post-page.component';\n\nconst routes: Routes = [\n  { path: 'signup', component: SignupComponent },\n  { path: 'signin', component: SigninComponent },\n  {\n    path: 'post/:id',\n    component: SinglePostPageComponent,\n    children: [\n      { path: '', component: CommentsComponent },\n      { path: 'comment/:id', component: SingleCommentPreviewComponent },\n    ],\n  },\n  { path: 'new', component: AddNewPostComponent },\n  { path: 'liked', component: PostsILikeComponent, canActivate: [AuthGuard] },\n  { path: 'mymemes', component: MyMemesComponent, canActivate: [AuthGuard] },\n  { path: '', component: HomeComponent },\n  { path: '**', component: NotFoundComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}